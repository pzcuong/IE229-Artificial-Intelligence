# -*- coding: utf-8 -*-
"""Lab 02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PU2z_g4H5Qsi-gH5g2JYrViobaZQwgZj
"""

#Import library
import matplotlib.pyplot as plt
import numpy as np

#Data D
X = [0.349526784, 1.6974435, 5.384308891, 2.044150596, 4.578814506, 3.241690807, 2.535931731, 2.210580888, 3.397474351,  5.972933146,  5.114704101]
Y = [0.254020646, 0.790556868, -0.81239532, 1.012143475, -0.904558188, -0.167456361, 0.482547054, 0.878514378, -0.210093715, -0.128786937, -0.866501299]

"""Q1. Write a program to draw the scatter plot of the data D and sin function for the range 0 ≤ x ≤ 6, and generate a graph."""

x_sin = np.linspace(0, 6, 100)
plt.scatter(X, Y, color='red')
plt.plot(x_sin, np.sin(x_sin), color='green', label='sin(x)')
plt.title("Graph of question 1")
plt.xlabel("X")
plt.ylabel("Y")
plt.legend()
plt.show()

"""Q2 Write a gradient descent method program to find the parameters a, b, c, and d of the cubic function $y = ax^3 + bx^2 + cx + d$ from the data D. Generate a scatter plot of the data D for the range 0 ≤ x ≤ 6
and a graph showing the sin function and the cubic function.
"""

def cubic(a, b, c , d, x):
  return a*x**3 + b*x**2 + c*x + d

epoch = 200000
lr = 0.000008

a = 0
b = 0
c = 0
d = 0

for times in range(epoch):
  grad_a = 0
  grad_b = 0
  grad_c = 0
  grad_d = 0
  loss = 0

  for i in range(len(X)):
    x = X[i]
    y = Y[i]
    grad_a = grad_a - 2*x**3*(y - a*x**3 - b*x**2 - c*x - d)
    grad_b = grad_b - 2*x**2*(y - a*x**3 - b*x**2 - c*x - d)
    grad_c = grad_c - 2*x*(y - a*x**3 - b*x**2 - c*x - d)
    grad_d = grad_d - 2*(y - a*x**3 - b*x**2 - c*x - d)
    loss = loss + (y-a*x**3 - b*x**2 - c*x -d)**2
  a = a - lr * grad_a
  b = b - lr * grad_b
  c = c - lr * grad_c
  d = d - lr * grad_d

print(a, b, c, d)

x_sin = np.linspace(0,6,100)
plt.scatter(X, Y, color='red')
plt.plot(x_sin, np.sin(x_sin), color='green', label='sin(x)')
plt.plot(x_sin, cubic(a, b, c, d, x_sin), color='blue', label='cubic function')
plt.xlabel("X")
plt.ylabel("Y")
plt.legend()
plt.title("Graph of question 2")
plt.show()

"""Q3 Consider a learning method using the analytical solution of the least-squares method to find parameters for data D. Answer the following (a) and (b).

(a) Write a learning method program using the least-squares analytical solution to find the parameters w0, w1, w2, w3 of the cubic function $y=w0 + w1x + w2x^2 + w3x^3$ from the data D, and generate a graph drawing scatterplot of the data D, the sin function and cubic function for the range 0 ≤ x ≤ 6.
"""

X3 = []
for x in X:
  X3 = X3 + [[1, x, x**2, x**3]]
X3 = np.array(X3)
Y3 = np.array([Y]).T

Z1 = np.matmul(X3.T, X3)
Z2 = np.linalg.inv(Z1)
Z3 = np.matmul(Z2, X3.T)
w = np.matmul(Z3, Y3)
print(w)

def cubic_func(x):
  return w[3][0]*x**3 + w[2][0]*x**2 + w[1][0]*x + w[0][0]

x_sin = np.linspace(0,6,100)
plt.scatter(X, Y, color='red')
plt.plot(x_sin, np.sin(x_sin), color='green', label='sin(x)')
plt.plot(x_sin, cubic_func(x_sin), color='blue', label='cubic function')
plt.legend()
plt.xlabel("X")
plt.ylabel("Y")
plt.title("Graph of question 3a")
plt.show()

"""(b) Write a learning method program using the least-squares analytical solution to find the parameters w0, w1, w2, w3, w4, w5, w6, w7, w8, w9 of the ninth-order function $y = w0 + w1x + w2x^2 + w3x^3 + w4x^4 + w5x^5 + w6x^6 + w7x^7 + w8x^8 + w9x^9$ from the data D, and generate a graph drawing scatterplot of the data D, the sin function and the ninth-order function for the range 0 ≤ x ≤ 6."""

X9 = []

for x in X:
  t = []
  for i in range(10):
    t.append(x**i)
  X9 = X9 + [t]

X9 = np.array(X9)
Y9 = np.array([Y]).T

Z1 = np.matmul(X9.T, X9)
Z2 = np.linalg.inv(Z1)
Z3 = np.matmul(Z2, X9.T)
w = np.matmul(Z3, Y9)
print(w)

def nine_func(x):
  value = 0
  for i in range(10):
    value += w[i][0]*x**i
  return value

x_sin = np.linspace(0,6,100)
plt.scatter(X, Y, color='red')
plt.plot(x_sin, np.sin(x_sin), color='green', label='sin(x)')
plt.plot(x_sin, nine_func(x_sin), color='blue', label='nine-function')
plt.legend()
plt.xlabel("X")
plt.ylabel("Y")
plt.title("Graph of question 3b")
plt.show()

X_ = np.array(X)
Y_ = np.array(Y)
A = np.vstack([np.ones(len(X_)), \
               X_**1,  X_**2, X_**3, X_**4, X_**5, X_**6, X_**7, X_**8, X_**9,]).T
w = np.linalg.lstsq(A, Y_, rcond=None)[0]
x_range = np.linspace(0, 6, 100)
y_range = w[0] + w[1]*x_range + w[2]*x_range**2 + w[3]*x_range**3 + w[4]*x_range**4 \
             + w[5]*x_range**5 + w[6]*x_range**6 + w[7]*x_range**7 + w[8]*x_range**8 + w[9]*x_range**9

plt.scatter(X,Y, color="red")
plt.plot(x_range, np.sin(x_range), color="green", label='sin(x)')
plt.plot(x_range, y_range, color="blue", label='cubic function')
plt.title ("Graph 3b")
plt.legend()
plt.show()